@ronald zeballos , ronal barrientos, ernesto roca
class Nodo:
    def __init__(self, dato):
        self.dato = dato
        self.siguiente = None

class ListaEnlazada:
    def __init__(self):
        self.cabeza = None

    def insertar_al_principio(self, dato):
        nuevo_nodo = Nodo(dato)
        nuevo_nodo.siguiente = self.cabeza
        self.cabeza = nuevo_nodo

    def insertar_al_final(self, dato):
        nuevo_nodo = Nodo(dato)
        if self.cabeza is None:
            self.cabeza = nuevo_nodo
        else:
            actual = self.cabeza
            while actual.siguiente:
                actual = actual.siguiente
            actual.siguiente = nuevo_nodo

    def insertar_al_medio(self, dato, posicion):
        nuevo_nodo = Nodo(dato)
        if posicion <= 0:
            self.insertar_al_principio(dato)
            return
        actual = self.cabeza
        for _ in range(posicion - 1):
            if actual is None:
                return
            actual = actual.siguiente
        if actual is None:
            return
        nuevo_nodo.siguiente = actual.siguiente
        actual.siguiente = nuevo_nodo

    def sacar_al_inicio(self):
        if self.cabeza is None:
            return None
        dato_eliminado = self.cabeza.dato
        self.cabeza = self.cabeza.siguiente
        return dato_eliminado

    def sacar_al_final(self):
        if self.cabeza is None:
            return None
        if self.cabeza.siguiente is None:
            dato_eliminado = self.cabeza.dato
            self.cabeza = None
            return dato_eliminado
        actual = self.cabeza
        while actual.siguiente.siguiente:
            actual = actual.siguiente
        dato_eliminado = actual.siguiente.dato
        actual.siguiente = None
        return dato_eliminado

    def sacar_al_medio(self):
        if self.cabeza is None or self.cabeza.siguiente is None:
            return None
        anterior = None
        actual = self.cabeza
        rapido = self.cabeza
        while rapido and rapido.siguiente:
            rapido = rapido.siguiente.siguiente
            anterior = actual
            actual = actual.siguiente
        if anterior:
            anterior.siguiente = actual.siguiente
        else:
            self.cabeza = actual.siguiente
        return actual.dato

    def lista_vacia(self):
        return self.cabeza is None

    def lista_llena(self):
        return False

    def mostrar_inicio(self):
        if self.cabeza is None:
            print("La lista está vacía.")
        else:
            print("Inicio de la lista:", self.cabeza.dato)

    def mostrar_final(self):
        if self.cabeza is None:
            print("La lista está vacía.")
        else:
            actual = self.cabeza
            while actual.siguiente:
                actual = actual.siguiente
            print("Final de la lista:", actual.dato)

    def imprimir_lista(self):
        actual = self.cabeza
        while actual:
            print(actual.dato, end=" -> ")
            actual = actual.siguiente
        print("None")
def mostrar_menu():
    print("\n--- Menú ---")
    print("1. Insertar elemento al principio")
    print("2. Insertar elemento al final")
    print("3. Insertar elemento en posición específica")
    print("4. Sacar elemento al inicio")
    print("5. Sacar elemento al final")
    print("6. Sacar elemento al medio")
    print("7. Verificar si la lista está vacía")
    print("8. Verificar si la lista está llena")
    print("9. Mostrar inicio de la lista")
    print("10. Mostrar final de la lista")
    print("11. Mostrar lista")
    print("0. Salir")

lista = ListaEnlazada()

while True:
    mostrar_menu()
    opcion = input("Seleccione una opción: ")

    if opcion == "1":
        dato = input("Ingrese un dato para insertar al principio: ")
        lista.insertar_al_principio(int(dato))
    elif opcion == "2":
        dato = input("Ingrese un dato para insertar al final: ")
        lista.insertar_al_final(int(dato))
    elif opcion == "3":
        dato = input("Ingrese un dato para insertar: ")
        posicion = int(input("Ingrese la posición donde desea insertar: "))
        lista.insertar_al_medio(int(dato), posicion)
    elif opcion == "4":
        dato_sacado = lista.sacar_al_inicio()
        if dato_sacado is not None:
            print("Dato sacado del inicio:", dato_sacado)
    elif opcion == "5":
        dato_sacado = lista.sacar_al_final()
        if dato_sacado is not None:
            print("Dato sacado del final:", dato_sacado)
    elif opcion == "6":
        dato_sacado = lista.sacar_al_medio()
        if dato_sacado is not None:
            print("Dato sacado del medio:", dato_sacado)
    elif opcion == "7":
        if lista.lista_vacia():
            print("La lista está vacía.")
        else:
            print("La lista no está vacía.")
    elif opcion == "8":
        if lista.lista_llena():
            print("La lista está llena.")
        else:
            print("La lista no está llena.")
    elif opcion == "9":
        lista.mostrar_inicio()
    elif opcion == "10":
        lista.mostrar_final()
    elif opcion == "11":
        lista.imprimir_lista()
    elif opcion == "0":
        print("Saliendo del programa...")
        break
    else:
        print("Opción no válida. Por favor, seleccione una opción válida.")

